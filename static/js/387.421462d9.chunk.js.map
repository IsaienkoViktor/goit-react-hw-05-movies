{"version":3,"file":"static/js/387.421462d9.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,uBACjBE,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAOfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,qBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZM,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,EAAKO,MAJc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACeX,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,8JC9BfS,EAAaC,EAAAA,EAAAA,GAAH,6CAGVC,EAAWD,EAAAA,EAAAA,GAAH,iNAcRE,EAAeF,EAAAA,EAAAA,EAAH,+D,SCoBzB,EAlCgB,WACd,IAAQF,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEUX,EAAAA,EAAAA,IAAgBC,GAF1B,OAEXW,EAFW,OAGjBH,EAAWG,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACV,IAEgC,IAAnBO,EAAQO,QAGvB,yCAEA,SAACb,EAAD,UACGM,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACf,EAAD,YACE,0BACE,sCADF,IACwBc,MAExB,SAACb,EAAD,UAAec,MAJFF,EADJ,KAUlB,C","sources":["Services/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieById = async movieID => {\n  const { data } = await axios.get(\n    `movie/${movieID}?api_key=${API_KEY}&language=en-US'`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieID => {\n  const { data } = await axios.get(\n    `movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n`;\nexport const ListItem = styled.li`\n  font-size: 14px;\n  padding: 6px;\n  background-color: #bfdaa2;\n  border-radius: 12px;\n\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  span {\n    color: #ffc700;\n  }\n`;\nexport const ReviewsDescr = styled.p`\n  color: #888888;\n  margin-top: 6px;\n`;\n","import { getReviewsMovie } from 'Services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ListItem, ReviewsDescr, StyledList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const ReviewsFilms = await getReviewsMovie(movieId);\n        setReviews(ReviewsFilms);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  const noReview = reviews.length === 0;\n\n  return noReview ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <StyledList>\n      {reviews.map(({ id, author, content }) => (\n        <ListItem key={id}>\n          <p>\n            <span>Author:</span> {author}\n          </p>\n          <ReviewsDescr>{content}</ReviewsDescr>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default Reviews;\n\n// reviews.length === 0 ? (\n//     <h3>No Reviews.</h3>\n//   ) :\n"],"names":["axios","API_KEY","getTrending","data","results","getMovieByQuery","query","getMovieById","movieID","getMovieCast","cast","getReviewsMovie","movieId","StyledList","styled","ListItem","ReviewsDescr","useParams","useState","reviews","setReviews","useEffect","fetchReviews","ReviewsFilms","console","log","length","map","id","author","content"],"sourceRoot":""}