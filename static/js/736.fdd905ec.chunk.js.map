{"version":3,"file":"static/js/736.fdd905ec.chunk.js","mappings":"+YAEaA,EAAaC,EAAAA,EAAAA,KAAH,wlBAwCVC,EAAcD,EAAAA,EAAAA,IAAH,qGAOXE,EAAUF,EAAAA,EAAAA,IAAH,6FAMPG,EAAYH,EAAAA,EAAAA,GAAH,oEAKTI,EAAeJ,EAAAA,EAAAA,GAAH,mEAKZK,EAAYL,EAAAA,EAAAA,EAAH,uFAMTM,EAAkBN,EAAAA,EAAAA,GAAH,gKAUfO,EAAaP,EAAAA,EAAAA,GAAH,oGAOVQ,EAAWR,EAAAA,EAAAA,GAAH,qK,+LCtFrBS,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,uBACjBE,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAOfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,qBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZM,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,EAAKO,MAJc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACeX,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,gLC9BfS,EAAgBtB,EAAAA,EAAAA,IAAH,0C,GAIAA,EAAAA,EAAAA,GAAH,qGAOCA,EAAAA,EAAAA,GAAH,8T,QC6CrB,EAhDa,WACX,IAAQqB,GAAYE,EAAAA,EAAAA,MAAZF,QAER,GAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKT,EAAAA,EAAAA,IAAaG,GAFlB,OAERF,EAFQ,OAGdM,EAAQN,GAHM,gDAKdS,QAAQC,IAAR,MALc,yDAAH,qDAQfF,GACD,GAAE,CAACN,KAGF,+BAEI,SAACC,EAAD,WACE,SAAC,KAAD,UACGH,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,UAAC,KAAD,YACE,gBACEC,IAAG,UACDH,EACII,EAAAA,EAAkBJ,EAClBK,EAAAA,EAAc,SAAWJ,GAE/BK,IAAKL,EACLM,MAAO,WAET,0BACE,sCADF,IACwBN,MAExB,0BACE,yCADF,IAC2BC,OAddH,EADP,SAwBrB,C,6ECxDM,IAAMK,EAAkB,mCAClBC,EAAc,qC","sources":["Pages/MovieDetails/MoviesDetails.styled.jsx","Services/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const GoBackLink = styled.span`\n  a {\n    position: relative;\n    padding-left: 12px;\n  }\n\n  a::before {\n    content: '';\n    display: block;\n\n    border-color: #ffc700;\n    border-style: solid;\n    border-width: 0 0 2px 2px;\n    height: 6px;\n    left: 0;\n    position: absolute;\n    width: 6px;\n    margin-top: -4px;\n    top: 50%;\n\n    transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n  }\n\n  span {\n    color: #ffc700;\n  }\n\n  :hover,\n  :focus {\n    color: #ffc700;\n    a::before {\n      border-color: white;\n    }\n    span {\n      color: white;\n    }\n  }\n`;\n\nexport const FilmWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmImg = styled.img`\n  max-width: 182px;\n  background: #424242;\n  border-radius: 15px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 26px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmSubTitle = styled.h3`\n  font-size: 16px;\n  margin-bottom: 6px;\n`;\n\nexport const FilmDescr = styled.p`\n  font-size: 16px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\n\nexport const StyledListDescr = styled.ul`\n  font-size: 16px;\n  display: flex;\n  gap: 18px;\n  padding: 0;\n\n  border-radius: 20px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\nexport const StyledList = styled.ul`\n  display: flex;\n  gap: 18px;\n  padding: 14px;\n\n  border-radius: 20px;\n`;\nexport const ListItem = styled.li`\n  span {\n    color: #ffc700;\n  }\n\n  a:hover,\n  a:focus,\n  a:active {\n    color: #ffc700;\n    span {\n      color: white;\n    }\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieById = async movieID => {\n  const { data } = await axios.get(\n    `movie/${movieID}?api_key=${API_KEY}&language=en-US'`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieID => {\n  const { data } = await axios.get(\n    `movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const StyledWrapper = styled.div`\n  width: 1156px;\n`;\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  \n`;\nexport const ListItem = styled.li`\n  min-width: 182px;\n  font-size: 14px;\n  padding: 6px;\n  max-width: min-content;\n  background-color: #bfdaa2;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n    border-radius: 8px;\n  }\n  span {\n    color: #ffc700;\n  }\n`;\n","import {\n  ListItem,\n  StyledList,\n} from 'Pages/MovieDetails/MoviesDetails.styled.jsx';\nimport { getMovieCast } from 'Services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport { StyledWrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <StyledWrapper>\n          <StyledList>\n            {cast.map(({ id, profile_path, original_name, character }) => (\n              <ListItem key={id}>\n                <img\n                  src={`${\n                    profile_path\n                      ? BASE_POSTER_URL + profile_path\n                      : PLACEHOLDER + '?text=' + original_name\n                  }`}\n                  alt={original_name}\n                  width={'150px'}\n                />\n                <p>\n                  <span> Actor:</span> {original_name}\n                </p>\n                <p>\n                  <span>Character:</span> {character}\n                </p>\n              </ListItem>\n            ))}\n          </StyledList>\n        </StyledWrapper>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n"],"names":["GoBackLink","styled","FilmWrapper","FilmImg","FilmTitle","FilmSubTitle","FilmDescr","StyledListDescr","StyledList","ListItem","axios","API_KEY","getTrending","data","results","getMovieByQuery","query","getMovieById","movieID","getMovieCast","cast","getReviewsMovie","movieId","StyledWrapper","useParams","useState","setCast","useEffect","fetchCast","console","log","map","id","profile_path","original_name","character","src","BASE_POSTER_URL","PLACEHOLDER","alt","width"],"sourceRoot":""}